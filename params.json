{"name":"VanillaMasker","tagline":"A pure javascript input masker","body":"# What's this\r\n\r\n[![Build Status](https://travis-ci.org/BankFacil/vanilla-masker.svg)](https://travis-ci.org/BankFacil/vanilla-masker)\r\n[![Code Climate](https://codeclimate.com/github/BankFacil/vanilla-masker.png)](https://codeclimate.com/github/BankFacil/vanilla-masker)\r\n\r\nIt's a pure JavaScript input mask.  \r\nNow you can use a simple and pure javascript lib to mask html elements.  \r\nFuck jQuery, Zepto and any others javascript frameworks!\r\n\r\nLet's live now in a lightweight client-side world using VanillaMasker.  \r\nThis is a cross-browser and cross-device lib for desktop and responsible sites.\r\n\r\nThe [demo page](http://bankfacil.github.io/vanilla-masker/demo.html).\r\n\r\n# How to use\r\n\r\nDownload the lib: \r\n* [development version](https://raw.githubusercontent.com/BankFacil/vanilla-masker/master/src/vanilla-masker.js) (4.17 Kbytes);\r\n* [minified version](https://raw.githubusercontent.com/BankFacil/vanilla-masker/master/build/vanilla-masker.min.js) (2.21 Kbytes);\r\n* [gzipped version](https://raw.githubusercontent.com/BankFacil/vanilla-masker/master/build/vanilla-masker.min.gz.js) (912 bytes);\r\n\r\nOr install it using [Bower](http://bower.io): `bower install --save vanilla-masker`\r\n\r\nInclude it into your html page:\r\n``` html\r\n<script src=\"vanilla-masker.min.js\"></script>\r\n```\r\n\r\nAnd given these simple inputs tag:\r\n``` html\r\n<input type=\"text\">\r\n```\r\n\r\nYou can use the code below...\r\n\r\n### Constructor\r\n\r\n``` javascript\r\n// Input number example: 1234567890\r\nvar masker = new VanillaMasker({\r\n  // Decimal precision -> \"90\"\r\n  precision: 2, \r\n  // Decimal separator -> \",90\"\r\n  separator: ',', \r\n  // Number delimiter -> \"12.345.678\"\r\n  delimiter: '.', \r\n  // Money unit -> \"R$ 12.345.678,90\"\r\n  unit: 'R$', \r\n  // Force type only number instead decimal,\r\n  // masking decimals with \",00\"\r\n  // Zero cents -> \"R$ 1.234.567.890,00\"\r\n  zeroCents: true\r\n});\r\n```\r\n\r\n### Masking to money format\r\n\r\n``` javascript\r\n// Listen the input element masking it to money.\r\nmasker.maskMoney(document.querySelector(\"input\"));\r\n\r\n// Listen array of input elements masking it to money.\r\nmasker.maskMoney(document.querySelectorAll(\"input\"));\r\n\r\n// Converts number to money string\r\nmasker.toMoney(1234); // -> R$ 1.234,00\r\n```\r\n\r\n### Masking only numbers\r\n\r\n``` javascript\r\n// Listen the input element masking it to number.\r\nmasker.maskNumber(document.querySelector(\"input\"));\r\n\r\n// Converts any string to number \r\nmasker.toNumber(\"123ac34\"); // -> 12334\r\n```\r\n\r\n### Masking custom pattern\r\n\r\n``` javascript\r\n// Listen the input element masking it to format with pattern.\r\nmasker.maskPattern(document.querySelector(\"input\"), \"(99) 9999-9999\");\r\n\r\n// Converts value to masked phone\r\nmasker.toPattern(1099911111, \"(99) 9999-9999\"); // -> (10) 9991-1111\r\n// Converts value to masked date\r\nmasker.toPattern(12122000, \"99/99/9999\"); // -> 12/12/2000\r\n// Converts value to masked document\r\nmasker.toPattern(99911111101, \"999.999.999-99\"); // -> 999.111.111-01\r\n// Converts value to masked car plate\r\nmasker.toPattern('ABC1234', \"AAA-9999\"); // -> ABC-1234\r\n```\r\n\r\n# How to run localhost\r\n\r\n* Install node.js - http://nodejs.org/download\r\n* Clone this repository - `git clone git@github.com:BankFacil/vanilla-masker.git`\r\n* Install Grunt - `npm install -g grunt-cli`\r\n* Install Grunt dependencies - `cd vanilla-masker && npm install`\r\n* Running development mode - `grunt dev`\r\n* Open the browser - http://localhost:4500\r\n\r\n# Run test\r\n\r\n* Run the command: `grunt test`\r\n\r\n# Build project\r\n\r\n* Run the command: `grunt build`\r\n\r\n# TODO - we need pull requests :]\r\n\r\n* Internet Explorer 8 support;\r\n* Opera mobile support;\r\n* AMD support;\r\n* Beautify Demo Page;\r\n\r\n# Compatibility\r\n\r\nDesktop browsers:\r\n\r\n* Chrome\r\n* Firefox\r\n* Safari\r\n* Opera\r\n* Internet Explorer 8+\r\n\r\nMobile browsers:\r\n\r\n* Android (2.2+) native browsers\r\n* Chrome mobile\r\n* Dolphin\r\n* Opera mobile (not tested yet)\r\n* iOS\r\n\r\n# Contributors\r\n\r\nCaio Ribeiro Pereira - caio.ribeiro.pereira@gmail.com  \r\nLeandro Alvares da Costa - leandroadacosta@gmail.com  \r\nHenrique Antonini Silv√©rio - contato@henriquesilverio.com\r\n\r\n# Changelog\r\n\r\n## 0.3.0\r\n\r\n* Accepting elements from mask function\r\n* Changed maskPhone, maskCPF, maskCNPJ and maskDate to maskPattern function\r\n* Added toPattern function\r\n* Fixed maskPattern when types pattern \"A\" in a mask which has only pattern \"9\"\r\n* Internet Explorer 8 support\r\n\r\n## 0.2.0\r\n\r\n* Added zeroCents to maskMoney function\r\n* Added maskPhone, maskCPF, maskCNPJ and maskDate function\r\n* Added bindElementToMask function\r\n\r\n## 0.1.0\r\n\r\n* Added maskMoney\r\n* Added Bower support\r\n* Added Demo page\r\n* Added JSHint\r\n* Mobile browser support\r\n* Added Grunt build\r\n* Added Travis-CI\r\n* Added CodeClimate\r\n\r\n# License\r\n\r\nMIT License: http://bankfacil.mit-license.org\r\n\r\n# Powered by\r\n\r\nBankfacil: http://www.bankfacil.com.br  \r\n","google":"UA-31003046-6","note":"Don't delete this file! It's used internally to help with page regeneration."}